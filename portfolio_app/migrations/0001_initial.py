# Generated by Django 4.2.25 on 2025-10-04 18:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ContactMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("subject", models.CharField(max_length=200)),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Contact Message",
                "verbose_name_plural": "Contact Messages",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_name", models.CharField(max_length=100)),
                ("title", models.CharField(max_length=200)),
                ("bio", models.TextField()),
                ("location", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("linkedin_url", models.URLField(blank=True)),
                ("github_url", models.URLField(blank=True)),
                ("twitter_url", models.URLField(blank=True)),
                ("profile_image", models.ImageField(blank=True, upload_to="profile/")),
                ("resume_file", models.FileField(blank=True, upload_to="documents/")),
                ("meta_description", models.TextField(blank=True, max_length=160)),
                ("meta_keywords", models.CharField(blank=True, max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Profile",
                "verbose_name_plural": "Profile",
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("programming", "Programming Languages"),
                            ("ai_ml", "AI/ML Frameworks"),
                            ("backend", "Backend/Data"),
                            ("tools", "Engineering Tools"),
                            ("cloud", "Cloud/MLOps"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "proficiency",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                            ("expert", "Expert"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "years_experience",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Display prominently on the homepage"
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order for display (lower numbers first)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Skill",
                "verbose_name_plural": "Skills",
                "ordering": ["category", "order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                (
                    "description",
                    models.TextField(help_text="Brief description for project cards"),
                ),
                (
                    "detailed_description",
                    models.TextField(
                        blank=True, help_text="Detailed description for project pages"
                    ),
                ),
                ("image", models.ImageField(blank=True, upload_to="projects/")),
                ("github_url", models.URLField(blank=True)),
                ("demo_url", models.URLField(blank=True)),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Display prominently on the homepage"
                    ),
                ),
                ("created_date", models.DateField()),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order for display (lower numbers first)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="projects",
                        to="portfolio_app.profile",
                    ),
                ),
                (
                    "technologies",
                    models.ManyToManyField(
                        help_text="Technologies used in this project",
                        to="portfolio_app.skill",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project",
                "verbose_name_plural": "Projects",
                "ordering": ["-created_date", "order"],
            },
        ),
        migrations.CreateModel(
            name="Experience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company", models.CharField(max_length=100)),
                ("position", models.CharField(max_length=100)),
                ("location", models.CharField(max_length=100)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "is_current",
                    models.BooleanField(
                        default=False,
                        help_text="Check if this is your current position",
                    ),
                ),
                ("description", models.TextField()),
                (
                    "achievements",
                    models.JSONField(
                        default=list, help_text="List of key achievements"
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, help_text="Order for display (lower numbers first)"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="experiences",
                        to="portfolio_app.profile",
                    ),
                ),
                (
                    "technologies",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Technologies used in this role",
                        to="portfolio_app.skill",
                    ),
                ),
            ],
            options={
                "verbose_name": "Experience",
                "verbose_name_plural": "Experiences",
                "ordering": ["-start_date", "order"],
            },
        ),
    ]
